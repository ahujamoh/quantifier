- content_for :title do
  Setup
  = [ provider.title, metric.title ].join(" - ")
end
.container
  .row
    %h1
      = provider.title
      = metric.title
      = goal.delete_link if goal.persisted?
  .row
    .col-lg-4
      %h3 Goal Configuration
      = form_for goal, {method: :post, url: upsert_goals_path(provider.name, metric.key), html: {role: :form}}  do |f|
        .form-group
          = f.label :beeminder_slug
          = f.select :slug, available_goal_slugs, { prompt: "Select Beeminder Slug"},{ class: "form-control" }
        = f.fields_for :params do |pf|
          - extra_configuration = self.instance_exec(credential.client, f.object.params, pf, &metric.configuration)
          - extra_configuration.each do |(label, input)|
            .form-group
              = pf.label label
              = input
        = f.submit "Save", class: %i(btn btn-default)
    .col-lg-1
    .col-lg-4
      %h3 Current Score
      %table.table.table-responsive#current-score
        %thead
          %tr
            %td Timestamp
            %td Value
        %tbody
          - goal.fetch_scores.each do |datapoint|
            %tr
              %td= datapoint.timestamp
              %td= datapoint.value

